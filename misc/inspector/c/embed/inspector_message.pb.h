// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inspector_message.proto

#ifndef PROTOBUF_inspector_5fmessage_2eproto__INCLUDED
#define PROTOBUF_inspector_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace equtils {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_inspector_5fmessage_2eproto();
void protobuf_AssignDesc_inspector_5fmessage_2eproto();
void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

class InspectorMsgReq_Event_FuncCall;
class InspectorMsgReq_Event_Exit;
class InspectorMsgReq_Event;
class InspectorMsgReq_Initiation;
class InspectorMsgReq_JavaSpecificFields_StackTraceElement;
class InspectorMsgReq_JavaSpecificFields;
class InspectorMsgReq;
class InspectorMsgRsp;

enum InspectorMsgReq_Event_Type {
  InspectorMsgReq_Event_Type_FUNC_CALL = 1,
  InspectorMsgReq_Event_Type_EXIT = 2
};
bool InspectorMsgReq_Event_Type_IsValid(int value);
const InspectorMsgReq_Event_Type InspectorMsgReq_Event_Type_Type_MIN = InspectorMsgReq_Event_Type_FUNC_CALL;
const InspectorMsgReq_Event_Type InspectorMsgReq_Event_Type_Type_MAX = InspectorMsgReq_Event_Type_EXIT;
const int InspectorMsgReq_Event_Type_Type_ARRAYSIZE = InspectorMsgReq_Event_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* InspectorMsgReq_Event_Type_descriptor();
inline const ::std::string& InspectorMsgReq_Event_Type_Name(InspectorMsgReq_Event_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    InspectorMsgReq_Event_Type_descriptor(), value);
}
inline bool InspectorMsgReq_Event_Type_Parse(
    const ::std::string& name, InspectorMsgReq_Event_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InspectorMsgReq_Event_Type>(
    InspectorMsgReq_Event_Type_descriptor(), name, value);
}
enum InspectorMsgReq_Type {
  InspectorMsgReq_Type_EVENT = 1,
  InspectorMsgReq_Type_INITIATION = 2
};
bool InspectorMsgReq_Type_IsValid(int value);
const InspectorMsgReq_Type InspectorMsgReq_Type_Type_MIN = InspectorMsgReq_Type_EVENT;
const InspectorMsgReq_Type InspectorMsgReq_Type_Type_MAX = InspectorMsgReq_Type_INITIATION;
const int InspectorMsgReq_Type_Type_ARRAYSIZE = InspectorMsgReq_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* InspectorMsgReq_Type_descriptor();
inline const ::std::string& InspectorMsgReq_Type_Name(InspectorMsgReq_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    InspectorMsgReq_Type_descriptor(), value);
}
inline bool InspectorMsgReq_Type_Parse(
    const ::std::string& name, InspectorMsgReq_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InspectorMsgReq_Type>(
    InspectorMsgReq_Type_descriptor(), name, value);
}
enum InspectorMsgRsp_Result {
  InspectorMsgRsp_Result_ACK = 1,
  InspectorMsgRsp_Result_ERROR = 2,
  InspectorMsgRsp_Result_END = 3
};
bool InspectorMsgRsp_Result_IsValid(int value);
const InspectorMsgRsp_Result InspectorMsgRsp_Result_Result_MIN = InspectorMsgRsp_Result_ACK;
const InspectorMsgRsp_Result InspectorMsgRsp_Result_Result_MAX = InspectorMsgRsp_Result_END;
const int InspectorMsgRsp_Result_Result_ARRAYSIZE = InspectorMsgRsp_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* InspectorMsgRsp_Result_descriptor();
inline const ::std::string& InspectorMsgRsp_Result_Name(InspectorMsgRsp_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    InspectorMsgRsp_Result_descriptor(), value);
}
inline bool InspectorMsgRsp_Result_Parse(
    const ::std::string& name, InspectorMsgRsp_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InspectorMsgRsp_Result>(
    InspectorMsgRsp_Result_descriptor(), name, value);
}
// ===================================================================

class InspectorMsgReq_Event_FuncCall : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_Event_FuncCall();
  virtual ~InspectorMsgReq_Event_FuncCall();

  InspectorMsgReq_Event_FuncCall(const InspectorMsgReq_Event_FuncCall& from);

  inline InspectorMsgReq_Event_FuncCall& operator=(const InspectorMsgReq_Event_FuncCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_Event_FuncCall& default_instance();

  void Swap(InspectorMsgReq_Event_FuncCall* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_Event_FuncCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_Event_FuncCall& from);
  void MergeFrom(const InspectorMsgReq_Event_FuncCall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_Event_FuncCall)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_Event_FuncCall* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq_Event_Exit : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_Event_Exit();
  virtual ~InspectorMsgReq_Event_Exit();

  InspectorMsgReq_Event_Exit(const InspectorMsgReq_Event_Exit& from);

  inline InspectorMsgReq_Event_Exit& operator=(const InspectorMsgReq_Event_Exit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_Event_Exit& default_instance();

  void Swap(InspectorMsgReq_Event_Exit* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_Event_Exit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_Event_Exit& from);
  void MergeFrom(const InspectorMsgReq_Event_Exit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 exitCode = 1;
  inline bool has_exitcode() const;
  inline void clear_exitcode();
  static const int kExitCodeFieldNumber = 1;
  inline ::google::protobuf::int32 exitcode() const;
  inline void set_exitcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_Event_Exit)
 private:
  inline void set_has_exitcode();
  inline void clear_has_exitcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 exitcode_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_Event_Exit* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq_Event : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_Event();
  virtual ~InspectorMsgReq_Event();

  InspectorMsgReq_Event(const InspectorMsgReq_Event& from);

  inline InspectorMsgReq_Event& operator=(const InspectorMsgReq_Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_Event& default_instance();

  void Swap(InspectorMsgReq_Event* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_Event& from);
  void MergeFrom(const InspectorMsgReq_Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InspectorMsgReq_Event_Type Type;
  static const Type FUNC_CALL = InspectorMsgReq_Event_Type_FUNC_CALL;
  static const Type EXIT = InspectorMsgReq_Event_Type_EXIT;
  static inline bool Type_IsValid(int value) {
    return InspectorMsgReq_Event_Type_IsValid(value);
  }
  static const Type Type_MIN =
    InspectorMsgReq_Event_Type_Type_MIN;
  static const Type Type_MAX =
    InspectorMsgReq_Event_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    InspectorMsgReq_Event_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return InspectorMsgReq_Event_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return InspectorMsgReq_Event_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return InspectorMsgReq_Event_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .equtils.InspectorMsgReq_Event.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::equtils::InspectorMsgReq_Event_Type type() const;
  inline void set_type(::equtils::InspectorMsgReq_Event_Type value);

  // optional .equtils.InspectorMsgReq_Event_FuncCall FuncCall = 2;
  inline bool has_funccall() const;
  inline void clear_funccall();
  static const int kFuncCallFieldNumber = 2;
  inline const ::equtils::InspectorMsgReq_Event_FuncCall& funccall() const;
  inline ::equtils::InspectorMsgReq_Event_FuncCall* mutable_funccall();
  inline ::equtils::InspectorMsgReq_Event_FuncCall* release_funccall();
  inline void set_allocated_funccall(::equtils::InspectorMsgReq_Event_FuncCall* funccall);

  // optional .equtils.InspectorMsgReq_Event_Exit Exit = 3;
  inline bool has_exit() const;
  inline void clear_exit();
  static const int kExitFieldNumber = 3;
  inline const ::equtils::InspectorMsgReq_Event_Exit& exit() const;
  inline ::equtils::InspectorMsgReq_Event_Exit* mutable_exit();
  inline ::equtils::InspectorMsgReq_Event_Exit* release_exit();
  inline void set_allocated_exit(::equtils::InspectorMsgReq_Event_Exit* exit);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_Event)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_funccall();
  inline void clear_has_funccall();
  inline void set_has_exit();
  inline void clear_has_exit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::equtils::InspectorMsgReq_Event_FuncCall* funccall_;
  ::equtils::InspectorMsgReq_Event_Exit* exit_;
  int type_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_Event* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq_Initiation : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_Initiation();
  virtual ~InspectorMsgReq_Initiation();

  InspectorMsgReq_Initiation(const InspectorMsgReq_Initiation& from);

  inline InspectorMsgReq_Initiation& operator=(const InspectorMsgReq_Initiation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_Initiation& default_instance();

  void Swap(InspectorMsgReq_Initiation* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_Initiation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_Initiation& from);
  void MergeFrom(const InspectorMsgReq_Initiation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string processId = 1;
  inline bool has_processid() const;
  inline void clear_processid();
  static const int kProcessIdFieldNumber = 1;
  inline const ::std::string& processid() const;
  inline void set_processid(const ::std::string& value);
  inline void set_processid(const char* value);
  inline void set_processid(const char* value, size_t size);
  inline ::std::string* mutable_processid();
  inline ::std::string* release_processid();
  inline void set_allocated_processid(::std::string* processid);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_Initiation)
 private:
  inline void set_has_processid();
  inline void clear_has_processid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* processid_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_Initiation* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq_JavaSpecificFields_StackTraceElement : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_JavaSpecificFields_StackTraceElement();
  virtual ~InspectorMsgReq_JavaSpecificFields_StackTraceElement();

  InspectorMsgReq_JavaSpecificFields_StackTraceElement(const InspectorMsgReq_JavaSpecificFields_StackTraceElement& from);

  inline InspectorMsgReq_JavaSpecificFields_StackTraceElement& operator=(const InspectorMsgReq_JavaSpecificFields_StackTraceElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_JavaSpecificFields_StackTraceElement& default_instance();

  void Swap(InspectorMsgReq_JavaSpecificFields_StackTraceElement* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_JavaSpecificFields_StackTraceElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_JavaSpecificFields_StackTraceElement& from);
  void MergeFrom(const InspectorMsgReq_JavaSpecificFields_StackTraceElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string fileName = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // required string className = 2;
  inline bool has_classname() const;
  inline void clear_classname();
  static const int kClassNameFieldNumber = 2;
  inline const ::std::string& classname() const;
  inline void set_classname(const ::std::string& value);
  inline void set_classname(const char* value);
  inline void set_classname(const char* value, size_t size);
  inline ::std::string* mutable_classname();
  inline ::std::string* release_classname();
  inline void set_allocated_classname(::std::string* classname);

  // required string methodName = 3;
  inline bool has_methodname() const;
  inline void clear_methodname();
  static const int kMethodNameFieldNumber = 3;
  inline const ::std::string& methodname() const;
  inline void set_methodname(const ::std::string& value);
  inline void set_methodname(const char* value);
  inline void set_methodname(const char* value, size_t size);
  inline ::std::string* mutable_methodname();
  inline ::std::string* release_methodname();
  inline void set_allocated_methodname(::std::string* methodname);

  // required int32 lineNumber = 4;
  inline bool has_linenumber() const;
  inline void clear_linenumber();
  static const int kLineNumberFieldNumber = 4;
  inline ::google::protobuf::int32 linenumber() const;
  inline void set_linenumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_classname();
  inline void clear_has_classname();
  inline void set_has_methodname();
  inline void clear_has_methodname();
  inline void set_has_linenumber();
  inline void clear_has_linenumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  ::std::string* classname_;
  ::std::string* methodname_;
  ::google::protobuf::int32 linenumber_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_JavaSpecificFields_StackTraceElement* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq_JavaSpecificFields : public ::google::protobuf::Message {
 public:
  InspectorMsgReq_JavaSpecificFields();
  virtual ~InspectorMsgReq_JavaSpecificFields();

  InspectorMsgReq_JavaSpecificFields(const InspectorMsgReq_JavaSpecificFields& from);

  inline InspectorMsgReq_JavaSpecificFields& operator=(const InspectorMsgReq_JavaSpecificFields& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq_JavaSpecificFields& default_instance();

  void Swap(InspectorMsgReq_JavaSpecificFields* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq_JavaSpecificFields* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq_JavaSpecificFields& from);
  void MergeFrom(const InspectorMsgReq_JavaSpecificFields& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string threadName = 1;
  inline bool has_threadname() const;
  inline void clear_threadname();
  static const int kThreadNameFieldNumber = 1;
  inline const ::std::string& threadname() const;
  inline void set_threadname(const ::std::string& value);
  inline void set_threadname(const char* value);
  inline void set_threadname(const char* value, size_t size);
  inline ::std::string* mutable_threadname();
  inline ::std::string* release_threadname();
  inline void set_allocated_threadname(::std::string* threadname);

  // required int32 nrStackTraceElements = 2;
  inline bool has_nrstacktraceelements() const;
  inline void clear_nrstacktraceelements();
  static const int kNrStackTraceElementsFieldNumber = 2;
  inline ::google::protobuf::int32 nrstacktraceelements() const;
  inline void set_nrstacktraceelements(::google::protobuf::int32 value);

  // repeated .equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement stackTraceElements = 3;
  inline int stacktraceelements_size() const;
  inline void clear_stacktraceelements();
  static const int kStackTraceElementsFieldNumber = 3;
  inline const ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement& stacktraceelements(int index) const;
  inline ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement* mutable_stacktraceelements(int index);
  inline ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement* add_stacktraceelements();
  inline const ::google::protobuf::RepeatedPtrField< ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement >&
      stacktraceelements() const;
  inline ::google::protobuf::RepeatedPtrField< ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement >*
      mutable_stacktraceelements();

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq_JavaSpecificFields)
 private:
  inline void set_has_threadname();
  inline void clear_has_threadname();
  inline void set_has_nrstacktraceelements();
  inline void clear_has_nrstacktraceelements();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* threadname_;
  ::google::protobuf::RepeatedPtrField< ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement > stacktraceelements_;
  ::google::protobuf::int32 nrstacktraceelements_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq_JavaSpecificFields* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgReq : public ::google::protobuf::Message {
 public:
  InspectorMsgReq();
  virtual ~InspectorMsgReq();

  InspectorMsgReq(const InspectorMsgReq& from);

  inline InspectorMsgReq& operator=(const InspectorMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgReq& default_instance();

  void Swap(InspectorMsgReq* other);

  // implements Message ----------------------------------------------

  InspectorMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgReq& from);
  void MergeFrom(const InspectorMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InspectorMsgReq_Type Type;
  static const Type EVENT = InspectorMsgReq_Type_EVENT;
  static const Type INITIATION = InspectorMsgReq_Type_INITIATION;
  static inline bool Type_IsValid(int value) {
    return InspectorMsgReq_Type_IsValid(value);
  }
  static const Type Type_MIN =
    InspectorMsgReq_Type_Type_MIN;
  static const Type Type_MAX =
    InspectorMsgReq_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    InspectorMsgReq_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return InspectorMsgReq_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return InspectorMsgReq_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return InspectorMsgReq_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string process_id = 1;
  inline bool has_process_id() const;
  inline void clear_process_id();
  static const int kProcessIdFieldNumber = 1;
  inline const ::std::string& process_id() const;
  inline void set_process_id(const ::std::string& value);
  inline void set_process_id(const char* value);
  inline void set_process_id(const char* value, size_t size);
  inline ::std::string* mutable_process_id();
  inline ::std::string* release_process_id();
  inline void set_allocated_process_id(::std::string* process_id);

  // required .equtils.InspectorMsgReq.Type type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::equtils::InspectorMsgReq_Type type() const;
  inline void set_type(::equtils::InspectorMsgReq_Type value);

  // required int32 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);

  // required int32 tid = 4;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 4;
  inline ::google::protobuf::int32 tid() const;
  inline void set_tid(::google::protobuf::int32 value);

  // required int32 msg_id = 5;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional int32 ga_msg_id = 6;
  inline bool has_ga_msg_id() const;
  inline void clear_ga_msg_id();
  static const int kGaMsgIdFieldNumber = 6;
  inline ::google::protobuf::int32 ga_msg_id() const;
  inline void set_ga_msg_id(::google::protobuf::int32 value);

  // optional .equtils.InspectorMsgReq_Event Event = 7;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 7;
  inline const ::equtils::InspectorMsgReq_Event& event() const;
  inline ::equtils::InspectorMsgReq_Event* mutable_event();
  inline ::equtils::InspectorMsgReq_Event* release_event();
  inline void set_allocated_event(::equtils::InspectorMsgReq_Event* event);

  // optional .equtils.InspectorMsgReq_Initiation Initiation = 8;
  inline bool has_initiation() const;
  inline void clear_initiation();
  static const int kInitiationFieldNumber = 8;
  inline const ::equtils::InspectorMsgReq_Initiation& initiation() const;
  inline ::equtils::InspectorMsgReq_Initiation* mutable_initiation();
  inline ::equtils::InspectorMsgReq_Initiation* release_initiation();
  inline void set_allocated_initiation(::equtils::InspectorMsgReq_Initiation* initiation);

  // required int32 HasJavaSpecificFields = 9;
  inline bool has_hasjavaspecificfields() const;
  inline void clear_hasjavaspecificfields();
  static const int kHasJavaSpecificFieldsFieldNumber = 9;
  inline ::google::protobuf::int32 hasjavaspecificfields() const;
  inline void set_hasjavaspecificfields(::google::protobuf::int32 value);

  // optional .equtils.InspectorMsgReq_JavaSpecificFields JavaSpecificFields = 10;
  inline bool has_javaspecificfields() const;
  inline void clear_javaspecificfields();
  static const int kJavaSpecificFieldsFieldNumber = 10;
  inline const ::equtils::InspectorMsgReq_JavaSpecificFields& javaspecificfields() const;
  inline ::equtils::InspectorMsgReq_JavaSpecificFields* mutable_javaspecificfields();
  inline ::equtils::InspectorMsgReq_JavaSpecificFields* release_javaspecificfields();
  inline void set_allocated_javaspecificfields(::equtils::InspectorMsgReq_JavaSpecificFields* javaspecificfields);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgReq)
 private:
  inline void set_has_process_id();
  inline void clear_has_process_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_ga_msg_id();
  inline void clear_has_ga_msg_id();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_initiation();
  inline void clear_has_initiation();
  inline void set_has_hasjavaspecificfields();
  inline void clear_has_hasjavaspecificfields();
  inline void set_has_javaspecificfields();
  inline void clear_has_javaspecificfields();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* process_id_;
  int type_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 msg_id_;
  ::equtils::InspectorMsgReq_Event* event_;
  ::google::protobuf::int32 ga_msg_id_;
  ::google::protobuf::int32 hasjavaspecificfields_;
  ::equtils::InspectorMsgReq_Initiation* initiation_;
  ::equtils::InspectorMsgReq_JavaSpecificFields* javaspecificfields_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class InspectorMsgRsp : public ::google::protobuf::Message {
 public:
  InspectorMsgRsp();
  virtual ~InspectorMsgRsp();

  InspectorMsgRsp(const InspectorMsgRsp& from);

  inline InspectorMsgRsp& operator=(const InspectorMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InspectorMsgRsp& default_instance();

  void Swap(InspectorMsgRsp* other);

  // implements Message ----------------------------------------------

  InspectorMsgRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InspectorMsgRsp& from);
  void MergeFrom(const InspectorMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef InspectorMsgRsp_Result Result;
  static const Result ACK = InspectorMsgRsp_Result_ACK;
  static const Result ERROR = InspectorMsgRsp_Result_ERROR;
  static const Result END = InspectorMsgRsp_Result_END;
  static inline bool Result_IsValid(int value) {
    return InspectorMsgRsp_Result_IsValid(value);
  }
  static const Result Result_MIN =
    InspectorMsgRsp_Result_Result_MIN;
  static const Result Result_MAX =
    InspectorMsgRsp_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    InspectorMsgRsp_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return InspectorMsgRsp_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return InspectorMsgRsp_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return InspectorMsgRsp_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .equtils.InspectorMsgRsp.Result res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::equtils::InspectorMsgRsp_Result res() const;
  inline void set_res(::equtils::InspectorMsgRsp_Result value);

  // optional int32 msg_id = 2;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::int32 msg_id() const;
  inline void set_msg_id(::google::protobuf::int32 value);

  // optional int32 ga_msg_id = 3;
  inline bool has_ga_msg_id() const;
  inline void clear_ga_msg_id();
  static const int kGaMsgIdFieldNumber = 3;
  inline ::google::protobuf::int32 ga_msg_id() const;
  inline void set_ga_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:equtils.InspectorMsgRsp)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_ga_msg_id();
  inline void clear_has_ga_msg_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int res_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 ga_msg_id_;
  friend void  protobuf_AddDesc_inspector_5fmessage_2eproto();
  friend void protobuf_AssignDesc_inspector_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_inspector_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static InspectorMsgRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// InspectorMsgReq_Event_FuncCall

// required string name = 1;
inline bool InspectorMsgReq_Event_FuncCall::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_Event_FuncCall::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_Event_FuncCall::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_Event_FuncCall::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& InspectorMsgReq_Event_FuncCall::name() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Event_FuncCall.name)
  return *name_;
}
inline void InspectorMsgReq_Event_FuncCall::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_Event_FuncCall.name)
}
inline void InspectorMsgReq_Event_FuncCall::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_Event_FuncCall.name)
}
inline void InspectorMsgReq_Event_FuncCall::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_Event_FuncCall.name)
}
inline ::std::string* InspectorMsgReq_Event_FuncCall::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_Event_FuncCall.name)
  return name_;
}
inline ::std::string* InspectorMsgReq_Event_FuncCall::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_Event_FuncCall::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_Event_FuncCall.name)
}

// -------------------------------------------------------------------

// InspectorMsgReq_Event_Exit

// required int32 exitCode = 1;
inline bool InspectorMsgReq_Event_Exit::has_exitcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_Event_Exit::set_has_exitcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_Event_Exit::clear_has_exitcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_Event_Exit::clear_exitcode() {
  exitcode_ = 0;
  clear_has_exitcode();
}
inline ::google::protobuf::int32 InspectorMsgReq_Event_Exit::exitcode() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Event_Exit.exitCode)
  return exitcode_;
}
inline void InspectorMsgReq_Event_Exit::set_exitcode(::google::protobuf::int32 value) {
  set_has_exitcode();
  exitcode_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_Event_Exit.exitCode)
}

// -------------------------------------------------------------------

// InspectorMsgReq_Event

// required .equtils.InspectorMsgReq_Event.Type type = 1;
inline bool InspectorMsgReq_Event::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_Event::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_Event::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_Event::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::equtils::InspectorMsgReq_Event_Type InspectorMsgReq_Event::type() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Event.type)
  return static_cast< ::equtils::InspectorMsgReq_Event_Type >(type_);
}
inline void InspectorMsgReq_Event::set_type(::equtils::InspectorMsgReq_Event_Type value) {
  assert(::equtils::InspectorMsgReq_Event_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_Event.type)
}

// optional .equtils.InspectorMsgReq_Event_FuncCall FuncCall = 2;
inline bool InspectorMsgReq_Event::has_funccall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InspectorMsgReq_Event::set_has_funccall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InspectorMsgReq_Event::clear_has_funccall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InspectorMsgReq_Event::clear_funccall() {
  if (funccall_ != NULL) funccall_->::equtils::InspectorMsgReq_Event_FuncCall::Clear();
  clear_has_funccall();
}
inline const ::equtils::InspectorMsgReq_Event_FuncCall& InspectorMsgReq_Event::funccall() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Event.FuncCall)
  return funccall_ != NULL ? *funccall_ : *default_instance_->funccall_;
}
inline ::equtils::InspectorMsgReq_Event_FuncCall* InspectorMsgReq_Event::mutable_funccall() {
  set_has_funccall();
  if (funccall_ == NULL) funccall_ = new ::equtils::InspectorMsgReq_Event_FuncCall;
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_Event.FuncCall)
  return funccall_;
}
inline ::equtils::InspectorMsgReq_Event_FuncCall* InspectorMsgReq_Event::release_funccall() {
  clear_has_funccall();
  ::equtils::InspectorMsgReq_Event_FuncCall* temp = funccall_;
  funccall_ = NULL;
  return temp;
}
inline void InspectorMsgReq_Event::set_allocated_funccall(::equtils::InspectorMsgReq_Event_FuncCall* funccall) {
  delete funccall_;
  funccall_ = funccall;
  if (funccall) {
    set_has_funccall();
  } else {
    clear_has_funccall();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_Event.FuncCall)
}

// optional .equtils.InspectorMsgReq_Event_Exit Exit = 3;
inline bool InspectorMsgReq_Event::has_exit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InspectorMsgReq_Event::set_has_exit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InspectorMsgReq_Event::clear_has_exit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InspectorMsgReq_Event::clear_exit() {
  if (exit_ != NULL) exit_->::equtils::InspectorMsgReq_Event_Exit::Clear();
  clear_has_exit();
}
inline const ::equtils::InspectorMsgReq_Event_Exit& InspectorMsgReq_Event::exit() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Event.Exit)
  return exit_ != NULL ? *exit_ : *default_instance_->exit_;
}
inline ::equtils::InspectorMsgReq_Event_Exit* InspectorMsgReq_Event::mutable_exit() {
  set_has_exit();
  if (exit_ == NULL) exit_ = new ::equtils::InspectorMsgReq_Event_Exit;
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_Event.Exit)
  return exit_;
}
inline ::equtils::InspectorMsgReq_Event_Exit* InspectorMsgReq_Event::release_exit() {
  clear_has_exit();
  ::equtils::InspectorMsgReq_Event_Exit* temp = exit_;
  exit_ = NULL;
  return temp;
}
inline void InspectorMsgReq_Event::set_allocated_exit(::equtils::InspectorMsgReq_Event_Exit* exit) {
  delete exit_;
  exit_ = exit;
  if (exit) {
    set_has_exit();
  } else {
    clear_has_exit();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_Event.Exit)
}

// -------------------------------------------------------------------

// InspectorMsgReq_Initiation

// required string processId = 1;
inline bool InspectorMsgReq_Initiation::has_processid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_Initiation::set_has_processid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_Initiation::clear_has_processid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_Initiation::clear_processid() {
  if (processid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_->clear();
  }
  clear_has_processid();
}
inline const ::std::string& InspectorMsgReq_Initiation::processid() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_Initiation.processId)
  return *processid_;
}
inline void InspectorMsgReq_Initiation::set_processid(const ::std::string& value) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_Initiation.processId)
}
inline void InspectorMsgReq_Initiation::set_processid(const char* value) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_Initiation.processId)
}
inline void InspectorMsgReq_Initiation::set_processid(const char* value, size_t size) {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  processid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_Initiation.processId)
}
inline ::std::string* InspectorMsgReq_Initiation::mutable_processid() {
  set_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    processid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_Initiation.processId)
  return processid_;
}
inline ::std::string* InspectorMsgReq_Initiation::release_processid() {
  clear_has_processid();
  if (processid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = processid_;
    processid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_Initiation::set_allocated_processid(::std::string* processid) {
  if (processid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete processid_;
  }
  if (processid) {
    set_has_processid();
    processid_ = processid;
  } else {
    clear_has_processid();
    processid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_Initiation.processId)
}

// -------------------------------------------------------------------

// InspectorMsgReq_JavaSpecificFields_StackTraceElement

// required string fileName = 1;
inline bool InspectorMsgReq_JavaSpecificFields_StackTraceElement::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& InspectorMsgReq_JavaSpecificFields_StackTraceElement::filename() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
  return *filename_;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
  return filename_;
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.fileName)
}

// required string className = 2;
inline bool InspectorMsgReq_JavaSpecificFields_StackTraceElement::has_classname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_has_classname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_has_classname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_classname() {
  if (classname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classname_->clear();
  }
  clear_has_classname();
}
inline const ::std::string& InspectorMsgReq_JavaSpecificFields_StackTraceElement::classname() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
  return *classname_;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_classname(const ::std::string& value) {
  set_has_classname();
  if (classname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classname_ = new ::std::string;
  }
  classname_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_classname(const char* value) {
  set_has_classname();
  if (classname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classname_ = new ::std::string;
  }
  classname_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_classname(const char* value, size_t size) {
  set_has_classname();
  if (classname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classname_ = new ::std::string;
  }
  classname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::mutable_classname() {
  set_has_classname();
  if (classname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    classname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
  return classname_;
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::release_classname() {
  clear_has_classname();
  if (classname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = classname_;
    classname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_allocated_classname(::std::string* classname) {
  if (classname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete classname_;
  }
  if (classname) {
    set_has_classname();
    classname_ = classname;
  } else {
    clear_has_classname();
    classname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.className)
}

// required string methodName = 3;
inline bool InspectorMsgReq_JavaSpecificFields_StackTraceElement::has_methodname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_has_methodname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_has_methodname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_methodname() {
  if (methodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    methodname_->clear();
  }
  clear_has_methodname();
}
inline const ::std::string& InspectorMsgReq_JavaSpecificFields_StackTraceElement::methodname() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
  return *methodname_;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_methodname(const ::std::string& value) {
  set_has_methodname();
  if (methodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    methodname_ = new ::std::string;
  }
  methodname_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_methodname(const char* value) {
  set_has_methodname();
  if (methodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    methodname_ = new ::std::string;
  }
  methodname_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_methodname(const char* value, size_t size) {
  set_has_methodname();
  if (methodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    methodname_ = new ::std::string;
  }
  methodname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::mutable_methodname() {
  set_has_methodname();
  if (methodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    methodname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
  return methodname_;
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields_StackTraceElement::release_methodname() {
  clear_has_methodname();
  if (methodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = methodname_;
    methodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_allocated_methodname(::std::string* methodname) {
  if (methodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete methodname_;
  }
  if (methodname) {
    set_has_methodname();
    methodname_ = methodname;
  } else {
    clear_has_methodname();
    methodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.methodName)
}

// required int32 lineNumber = 4;
inline bool InspectorMsgReq_JavaSpecificFields_StackTraceElement::has_linenumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_has_linenumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_has_linenumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::clear_linenumber() {
  linenumber_ = 0;
  clear_has_linenumber();
}
inline ::google::protobuf::int32 InspectorMsgReq_JavaSpecificFields_StackTraceElement::linenumber() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.lineNumber)
  return linenumber_;
}
inline void InspectorMsgReq_JavaSpecificFields_StackTraceElement::set_linenumber(::google::protobuf::int32 value) {
  set_has_linenumber();
  linenumber_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement.lineNumber)
}

// -------------------------------------------------------------------

// InspectorMsgReq_JavaSpecificFields

// required string threadName = 1;
inline bool InspectorMsgReq_JavaSpecificFields::has_threadname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields::set_has_threadname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq_JavaSpecificFields::clear_has_threadname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq_JavaSpecificFields::clear_threadname() {
  if (threadname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    threadname_->clear();
  }
  clear_has_threadname();
}
inline const ::std::string& InspectorMsgReq_JavaSpecificFields::threadname() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
  return *threadname_;
}
inline void InspectorMsgReq_JavaSpecificFields::set_threadname(const ::std::string& value) {
  set_has_threadname();
  if (threadname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    threadname_ = new ::std::string;
  }
  threadname_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
}
inline void InspectorMsgReq_JavaSpecificFields::set_threadname(const char* value) {
  set_has_threadname();
  if (threadname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    threadname_ = new ::std::string;
  }
  threadname_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
}
inline void InspectorMsgReq_JavaSpecificFields::set_threadname(const char* value, size_t size) {
  set_has_threadname();
  if (threadname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    threadname_ = new ::std::string;
  }
  threadname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields::mutable_threadname() {
  set_has_threadname();
  if (threadname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    threadname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
  return threadname_;
}
inline ::std::string* InspectorMsgReq_JavaSpecificFields::release_threadname() {
  clear_has_threadname();
  if (threadname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = threadname_;
    threadname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq_JavaSpecificFields::set_allocated_threadname(::std::string* threadname) {
  if (threadname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete threadname_;
  }
  if (threadname) {
    set_has_threadname();
    threadname_ = threadname;
  } else {
    clear_has_threadname();
    threadname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq_JavaSpecificFields.threadName)
}

// required int32 nrStackTraceElements = 2;
inline bool InspectorMsgReq_JavaSpecificFields::has_nrstacktraceelements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InspectorMsgReq_JavaSpecificFields::set_has_nrstacktraceelements() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InspectorMsgReq_JavaSpecificFields::clear_has_nrstacktraceelements() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InspectorMsgReq_JavaSpecificFields::clear_nrstacktraceelements() {
  nrstacktraceelements_ = 0;
  clear_has_nrstacktraceelements();
}
inline ::google::protobuf::int32 InspectorMsgReq_JavaSpecificFields::nrstacktraceelements() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields.nrStackTraceElements)
  return nrstacktraceelements_;
}
inline void InspectorMsgReq_JavaSpecificFields::set_nrstacktraceelements(::google::protobuf::int32 value) {
  set_has_nrstacktraceelements();
  nrstacktraceelements_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq_JavaSpecificFields.nrStackTraceElements)
}

// repeated .equtils.InspectorMsgReq_JavaSpecificFields_StackTraceElement stackTraceElements = 3;
inline int InspectorMsgReq_JavaSpecificFields::stacktraceelements_size() const {
  return stacktraceelements_.size();
}
inline void InspectorMsgReq_JavaSpecificFields::clear_stacktraceelements() {
  stacktraceelements_.Clear();
}
inline const ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement& InspectorMsgReq_JavaSpecificFields::stacktraceelements(int index) const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq_JavaSpecificFields.stackTraceElements)
  return stacktraceelements_.Get(index);
}
inline ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement* InspectorMsgReq_JavaSpecificFields::mutable_stacktraceelements(int index) {
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq_JavaSpecificFields.stackTraceElements)
  return stacktraceelements_.Mutable(index);
}
inline ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement* InspectorMsgReq_JavaSpecificFields::add_stacktraceelements() {
  // @@protoc_insertion_point(field_add:equtils.InspectorMsgReq_JavaSpecificFields.stackTraceElements)
  return stacktraceelements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement >&
InspectorMsgReq_JavaSpecificFields::stacktraceelements() const {
  // @@protoc_insertion_point(field_list:equtils.InspectorMsgReq_JavaSpecificFields.stackTraceElements)
  return stacktraceelements_;
}
inline ::google::protobuf::RepeatedPtrField< ::equtils::InspectorMsgReq_JavaSpecificFields_StackTraceElement >*
InspectorMsgReq_JavaSpecificFields::mutable_stacktraceelements() {
  // @@protoc_insertion_point(field_mutable_list:equtils.InspectorMsgReq_JavaSpecificFields.stackTraceElements)
  return &stacktraceelements_;
}

// -------------------------------------------------------------------

// InspectorMsgReq

// required string process_id = 1;
inline bool InspectorMsgReq::has_process_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgReq::set_has_process_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgReq::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgReq::clear_process_id() {
  if (process_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_->clear();
  }
  clear_has_process_id();
}
inline const ::std::string& InspectorMsgReq::process_id() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.process_id)
  return *process_id_;
}
inline void InspectorMsgReq::set_process_id(const ::std::string& value) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(value);
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.process_id)
}
inline void InspectorMsgReq::set_process_id(const char* value) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:equtils.InspectorMsgReq.process_id)
}
inline void InspectorMsgReq::set_process_id(const char* value, size_t size) {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  process_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:equtils.InspectorMsgReq.process_id)
}
inline ::std::string* InspectorMsgReq::mutable_process_id() {
  set_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    process_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq.process_id)
  return process_id_;
}
inline ::std::string* InspectorMsgReq::release_process_id() {
  clear_has_process_id();
  if (process_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = process_id_;
    process_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InspectorMsgReq::set_allocated_process_id(::std::string* process_id) {
  if (process_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete process_id_;
  }
  if (process_id) {
    set_has_process_id();
    process_id_ = process_id;
  } else {
    clear_has_process_id();
    process_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq.process_id)
}

// required .equtils.InspectorMsgReq.Type type = 2;
inline bool InspectorMsgReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InspectorMsgReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InspectorMsgReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InspectorMsgReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::equtils::InspectorMsgReq_Type InspectorMsgReq::type() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.type)
  return static_cast< ::equtils::InspectorMsgReq_Type >(type_);
}
inline void InspectorMsgReq::set_type(::equtils::InspectorMsgReq_Type value) {
  assert(::equtils::InspectorMsgReq_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.type)
}

// required int32 pid = 3;
inline bool InspectorMsgReq::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InspectorMsgReq::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InspectorMsgReq::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InspectorMsgReq::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 InspectorMsgReq::pid() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.pid)
  return pid_;
}
inline void InspectorMsgReq::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.pid)
}

// required int32 tid = 4;
inline bool InspectorMsgReq::has_tid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InspectorMsgReq::set_has_tid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InspectorMsgReq::clear_has_tid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InspectorMsgReq::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 InspectorMsgReq::tid() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.tid)
  return tid_;
}
inline void InspectorMsgReq::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.tid)
}

// required int32 msg_id = 5;
inline bool InspectorMsgReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InspectorMsgReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InspectorMsgReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InspectorMsgReq::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 InspectorMsgReq::msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.msg_id)
  return msg_id_;
}
inline void InspectorMsgReq::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.msg_id)
}

// optional int32 ga_msg_id = 6;
inline bool InspectorMsgReq::has_ga_msg_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InspectorMsgReq::set_has_ga_msg_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InspectorMsgReq::clear_has_ga_msg_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InspectorMsgReq::clear_ga_msg_id() {
  ga_msg_id_ = 0;
  clear_has_ga_msg_id();
}
inline ::google::protobuf::int32 InspectorMsgReq::ga_msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.ga_msg_id)
  return ga_msg_id_;
}
inline void InspectorMsgReq::set_ga_msg_id(::google::protobuf::int32 value) {
  set_has_ga_msg_id();
  ga_msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.ga_msg_id)
}

// optional .equtils.InspectorMsgReq_Event Event = 7;
inline bool InspectorMsgReq::has_event() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InspectorMsgReq::set_has_event() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InspectorMsgReq::clear_has_event() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InspectorMsgReq::clear_event() {
  if (event_ != NULL) event_->::equtils::InspectorMsgReq_Event::Clear();
  clear_has_event();
}
inline const ::equtils::InspectorMsgReq_Event& InspectorMsgReq::event() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.Event)
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::equtils::InspectorMsgReq_Event* InspectorMsgReq::mutable_event() {
  set_has_event();
  if (event_ == NULL) event_ = new ::equtils::InspectorMsgReq_Event;
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq.Event)
  return event_;
}
inline ::equtils::InspectorMsgReq_Event* InspectorMsgReq::release_event() {
  clear_has_event();
  ::equtils::InspectorMsgReq_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline void InspectorMsgReq::set_allocated_event(::equtils::InspectorMsgReq_Event* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq.Event)
}

// optional .equtils.InspectorMsgReq_Initiation Initiation = 8;
inline bool InspectorMsgReq::has_initiation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InspectorMsgReq::set_has_initiation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void InspectorMsgReq::clear_has_initiation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void InspectorMsgReq::clear_initiation() {
  if (initiation_ != NULL) initiation_->::equtils::InspectorMsgReq_Initiation::Clear();
  clear_has_initiation();
}
inline const ::equtils::InspectorMsgReq_Initiation& InspectorMsgReq::initiation() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.Initiation)
  return initiation_ != NULL ? *initiation_ : *default_instance_->initiation_;
}
inline ::equtils::InspectorMsgReq_Initiation* InspectorMsgReq::mutable_initiation() {
  set_has_initiation();
  if (initiation_ == NULL) initiation_ = new ::equtils::InspectorMsgReq_Initiation;
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq.Initiation)
  return initiation_;
}
inline ::equtils::InspectorMsgReq_Initiation* InspectorMsgReq::release_initiation() {
  clear_has_initiation();
  ::equtils::InspectorMsgReq_Initiation* temp = initiation_;
  initiation_ = NULL;
  return temp;
}
inline void InspectorMsgReq::set_allocated_initiation(::equtils::InspectorMsgReq_Initiation* initiation) {
  delete initiation_;
  initiation_ = initiation;
  if (initiation) {
    set_has_initiation();
  } else {
    clear_has_initiation();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq.Initiation)
}

// required int32 HasJavaSpecificFields = 9;
inline bool InspectorMsgReq::has_hasjavaspecificfields() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InspectorMsgReq::set_has_hasjavaspecificfields() {
  _has_bits_[0] |= 0x00000100u;
}
inline void InspectorMsgReq::clear_has_hasjavaspecificfields() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void InspectorMsgReq::clear_hasjavaspecificfields() {
  hasjavaspecificfields_ = 0;
  clear_has_hasjavaspecificfields();
}
inline ::google::protobuf::int32 InspectorMsgReq::hasjavaspecificfields() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.HasJavaSpecificFields)
  return hasjavaspecificfields_;
}
inline void InspectorMsgReq::set_hasjavaspecificfields(::google::protobuf::int32 value) {
  set_has_hasjavaspecificfields();
  hasjavaspecificfields_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgReq.HasJavaSpecificFields)
}

// optional .equtils.InspectorMsgReq_JavaSpecificFields JavaSpecificFields = 10;
inline bool InspectorMsgReq::has_javaspecificfields() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void InspectorMsgReq::set_has_javaspecificfields() {
  _has_bits_[0] |= 0x00000200u;
}
inline void InspectorMsgReq::clear_has_javaspecificfields() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void InspectorMsgReq::clear_javaspecificfields() {
  if (javaspecificfields_ != NULL) javaspecificfields_->::equtils::InspectorMsgReq_JavaSpecificFields::Clear();
  clear_has_javaspecificfields();
}
inline const ::equtils::InspectorMsgReq_JavaSpecificFields& InspectorMsgReq::javaspecificfields() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgReq.JavaSpecificFields)
  return javaspecificfields_ != NULL ? *javaspecificfields_ : *default_instance_->javaspecificfields_;
}
inline ::equtils::InspectorMsgReq_JavaSpecificFields* InspectorMsgReq::mutable_javaspecificfields() {
  set_has_javaspecificfields();
  if (javaspecificfields_ == NULL) javaspecificfields_ = new ::equtils::InspectorMsgReq_JavaSpecificFields;
  // @@protoc_insertion_point(field_mutable:equtils.InspectorMsgReq.JavaSpecificFields)
  return javaspecificfields_;
}
inline ::equtils::InspectorMsgReq_JavaSpecificFields* InspectorMsgReq::release_javaspecificfields() {
  clear_has_javaspecificfields();
  ::equtils::InspectorMsgReq_JavaSpecificFields* temp = javaspecificfields_;
  javaspecificfields_ = NULL;
  return temp;
}
inline void InspectorMsgReq::set_allocated_javaspecificfields(::equtils::InspectorMsgReq_JavaSpecificFields* javaspecificfields) {
  delete javaspecificfields_;
  javaspecificfields_ = javaspecificfields;
  if (javaspecificfields) {
    set_has_javaspecificfields();
  } else {
    clear_has_javaspecificfields();
  }
  // @@protoc_insertion_point(field_set_allocated:equtils.InspectorMsgReq.JavaSpecificFields)
}

// -------------------------------------------------------------------

// InspectorMsgRsp

// required .equtils.InspectorMsgRsp.Result res = 1;
inline bool InspectorMsgRsp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InspectorMsgRsp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InspectorMsgRsp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InspectorMsgRsp::clear_res() {
  res_ = 1;
  clear_has_res();
}
inline ::equtils::InspectorMsgRsp_Result InspectorMsgRsp::res() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgRsp.res)
  return static_cast< ::equtils::InspectorMsgRsp_Result >(res_);
}
inline void InspectorMsgRsp::set_res(::equtils::InspectorMsgRsp_Result value) {
  assert(::equtils::InspectorMsgRsp_Result_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgRsp.res)
}

// optional int32 msg_id = 2;
inline bool InspectorMsgRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InspectorMsgRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InspectorMsgRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InspectorMsgRsp::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 InspectorMsgRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgRsp.msg_id)
  return msg_id_;
}
inline void InspectorMsgRsp::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgRsp.msg_id)
}

// optional int32 ga_msg_id = 3;
inline bool InspectorMsgRsp::has_ga_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InspectorMsgRsp::set_has_ga_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InspectorMsgRsp::clear_has_ga_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InspectorMsgRsp::clear_ga_msg_id() {
  ga_msg_id_ = 0;
  clear_has_ga_msg_id();
}
inline ::google::protobuf::int32 InspectorMsgRsp::ga_msg_id() const {
  // @@protoc_insertion_point(field_get:equtils.InspectorMsgRsp.ga_msg_id)
  return ga_msg_id_;
}
inline void InspectorMsgRsp::set_ga_msg_id(::google::protobuf::int32 value) {
  set_has_ga_msg_id();
  ga_msg_id_ = value;
  // @@protoc_insertion_point(field_set:equtils.InspectorMsgRsp.ga_msg_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace equtils

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::equtils::InspectorMsgReq_Event_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::InspectorMsgReq_Event_Type>() {
  return ::equtils::InspectorMsgReq_Event_Type_descriptor();
}
template <> struct is_proto_enum< ::equtils::InspectorMsgReq_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::InspectorMsgReq_Type>() {
  return ::equtils::InspectorMsgReq_Type_descriptor();
}
template <> struct is_proto_enum< ::equtils::InspectorMsgRsp_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::equtils::InspectorMsgRsp_Result>() {
  return ::equtils::InspectorMsgRsp_Result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_inspector_5fmessage_2eproto__INCLUDED
